{"version":3,"sources":["components/Transaction.js","components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["Transaction","id","date","description","category","amount","deleteTransactions","onClick","fetch","method","className","TransactionsList","transactions","setTransactions","listtransaction","search","filter","transaction","map","Search","handleSearch","type","placeholder","onChange","AddTransactionForm","anewTransaction","useState","dataInfo","setDataInfo","setDate","setDescription","setCategory","setAmount","add","setAdd","handleSubmit","event","headers","body","JSON","stringify","then","response","json","info","console","log","handleChange","val","target","name","value","onSubmit","step","AccountContainer","React","copy","setCopy","useEffect","data","toLowerCase","includes","newTransaction","update","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6177fbaa.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Transaction({id, date, description, category, amount, deleteTransactions}) {\n\n  function handleDeleteTransaction(){\n    fetch (`http://localhost:8001/transactions/${id}`, {\n      method: \"DELETE\"\n    })\n    deleteTransactions(id);\n  }\n\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{description}</td>\n      <td>{category}</td>\n      <td>{amount}</td>\n      <td><button onClick={handleDeleteTransaction} className=\"ui button\">Delete Button</button></td>\n    </tr>\n  );\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({\n  transactions,\n  deleteTransactions,\n  setTransactions,\n  search,\n}) {\n  let listtransaction = \"Load transaction...\";\n\n  if (transactions) {\n    const tfilter = transactions.filter((transaction) => {\n      return transaction.description\n    });\n\n    listtransaction = tfilter.map((transaction) => {\n      return (\n        <Transaction\n          transaction={transactions}\n          setTransactions={setTransactions}\n          key={transaction.id}\n          date={transaction.date}\n          description={transaction.description}\n          category={transaction.category}\n          amount={transaction.amount}\n          id={transaction.id}\n          deleteTransactions={deleteTransactions}\n        />\n      );\n    });\n  }\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">\n              Description<i className=\"fa-solid fa-sort\"></i>\n            </h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">\n              Category<i className=\"fa-solid fa-sort\"></i>\n            </h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Button Action</h3>\n          </th>\n        </tr>\n        {listtransaction}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n","import React from \"react\";\n\nfunction Search({handleSearch}) {\n\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={handleSearch}\n        // value={search}\n\n      />\n      <i className=\"circular search link icon\"></i>\n\n    </div>\n  );\n}\n\nexport default Search;\n","import React , {useState} from \"react\";\n// import Transaction from \"./Transaction\";\n\nfunction AddTransactionForm(anewTransaction) {\n\n  const [dataInfo, setDataInfo] = useState({\n    date:\"\",\n    description:\"\",\n    category:\"\",\n    amount:0,\n  })\n\n  const[date,setDate]= useState(\"\")\n  const[description,setDescription] = useState(\"\")\n  const[category,setCategory] = useState(\"\")\n  const[amount,setAmount] = useState(\"\")\n  const[add, setAdd] = useState([])\n\n  function handleSubmit(event){\n    // event.preventDefault();\n    fetch(`http://localhost:8001/transactions`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        // dataInfo\n        date:dataInfo.date,\n        description:dataInfo.description,\n        category:dataInfo.category,\n        amount:dataInfo.amount\n        // addFormFields(){\n        //   setDataInfo([...dataInfo, {\n        //     date:\"\",\n        //     description:\"\",\n        //     category:\"\",\n        //     amount:\"\"\n        //   }])\n        //  }\n\n      })\n    })\n    .then((response)=>response.json())\n    .then((info)=>anewTransaction =(info))\n    console.log(dataInfo);\n    const info =[date, description, category, amount]\n    if(date&&description&&category&&amount){\n      setAdd((dataInfo)=>[...dataInfo,info])\n      setDate(\"\")\n      setDescription(\"\")\n      setCategory(\"\")\n      setAmount(\"\")\n    }\n  }\n\n  function handleChange(event){\n    const val = event.target.name\n     setDataInfo({...dataInfo, [val] : event.target.value})\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" value={dataInfo.date} onChange={handleChange} />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" value={dataInfo.description} onChange={handleChange}/>\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" value={dataInfo.category} onChange={handleChange}/>\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" value={dataInfo.amount} onChange={handleChange}/>\n        </div>\n        <button className=\"ui button\" type=\"submit\" onClick={handleSubmit}>\n          Add Transaction\n        </button>\n      </form>\n      {\n        add.map((dataInfo)=>\n        <table>\n          <tbody>\n            <tr>\n            <th>{dataInfo.date}</th>\n            <th>{dataInfo.description}</th>\n            <th>{dataInfo.category}</th>\n            <th>{dataInfo.amount}</th>\n            </tr>\n          </tbody>\n        </table>)\n      }\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n","import React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [copy, setCopy] = React.useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n\n        setCopy(data)\n        setTransactions(data)});\n  }, []);\n  console.log(transactions);\n\n  function addTransacfinfor(newTransaction) {\n    const update = [...transactions, newTransaction];\n    setTransactions(update);\n  }\n\n  //Delete transaction\n  function deleteTransact(id) {\n    const update = transactions.filter((transaction) => transaction.id !== id);\n    setTransactions(update);\n  }\n\n  function handleSearch(event){\n    let search = event.target.value.toLowerCase()\n    //  const somevalue = undefined\n    // const val = somevalue || \"\"\n    setTransactions(copy.filter(val=>val.description.toLowerCase().includes(search)))\n    console.log(handleSearch)\n  }\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm anewTransaction={addTransacfinfor} />\n      <TransactionsList\n        transactions={transactions}\n        deleteTransactions={deleteTransact}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}